diff -uNr ruby-rpm-1.2.0/ext/rpm/db.c ruby-rpm-1.2.0.new/ext/rpm/db.c
--- ruby-rpm-1.2.0/ext/rpm/db.c	2005-10-17 00:51:48.539020052 +0900
+++ ruby-rpm-1.2.0.new/ext/rpm/db.c	2005-10-17 00:30:31.715793506 +0900
@@ -200,6 +200,7 @@
 {
 	db_unref((rpm_db_t*)DATA_PTR(db));
 	DATA_PTR(db) = NULL;
+	return Qnil;
 }
 
 VALUE
@@ -248,6 +249,7 @@
 
 	if (!NIL_P(mi))
 		rpm_mi_each (mi);
+	return Qnil;
 }
 
 VALUE
@@ -289,10 +291,11 @@
 VALUE
 rpm_db_transaction(int argc, VALUE* argv, VALUE db)
 {
-	VALUE trans, problist;
+//	VALUE trans, problist;
+	VALUE trans;
 	rpm_trans_t* ts;
 	const char* root = "/";
-	VALUE ret;
+//	VALUE ret;
 
 #if 0
 	if (OBJ_FROZEN(db)) {
@@ -479,7 +482,7 @@
 		}
 	} else if ( rb_obj_is_kind_of(pkg, rpm_cDependency) ==Qfalse && 
                     rb_respond_to(pkg,rb_intern("name")) && rb_respond_to(pkg,rb_intern("version"))){
-		VALUE name = rb_funcall(pkg,rb_intern("name"),0);
+//		VALUE name = rb_funcall(pkg,rb_intern("name"),0);
 		mi = rpm_db_init_iterator(db, INT2NUM(RPMDBI_LABEL),rb_funcall(pkg,rb_intern("name"),0));
 		rpm_mi_set_iterator_version(mi,rb_funcall(pkg,rb_intern("version"),0));
 	} else
@@ -538,7 +541,7 @@
 	if (tmp_evr==NULL) { return Qnil; }
 
 	e = tmp_evr;
-	if ( end=strchr(e, ':') ) {
+	if ( (end=strchr(e, ':')) != NULL ) {
 		/* epoch is found */
 		*end = '\0';
 		vr = end+1;
@@ -693,7 +696,7 @@
 							sense_flags |= RPMSENSE_EQUAL;
 						} else if ( (*relation) == '>' ) {
 							sense_flags |= RPMSENSE_GREATER;
-						} else if ( (*relation), '<' ) {
+						} else if ( (*relation) == '<' ) {
 							sense_flags |= RPMSENSE_LESS;
 						}
 					}
@@ -965,9 +968,9 @@
 	}
 
 	mi = ALLOC_N(rpm_mi_t,1);
-	if (mi->mi = rpmdbInitIterator(RPM_DB(db), NUM2INT(rb_Integer(key)),
+	if ((mi->mi = rpmdbInitIterator(RPM_DB(db), NUM2INT(rb_Integer(key)),
 						   NIL_P(val) ? NULL : RSTRING(val)->ptr,
-						   NIL_P(val) ? 0 : RSTRING(val)->len)){
+						   NIL_P(val) ? 0 : RSTRING(val)->len)) != NULL){
 		mi->db = (rpm_db_t*)DATA_PTR(db);
 		db_ref(mi->db);
 		return Data_Wrap_Struct(rpm_cMatchIterator, NULL, mi_free, mi);
@@ -1040,6 +1043,7 @@
 	VALUE p;
 	while(!NIL_P( p = rpm_mi_next_iterator(mi)))
 		rb_yield (p);
+	return Qnil;
 }
 
 void

diff -uNr ruby-rpm-1.2.0/ext/rpm/package.c ruby-rpm-1.2.0.new/ext/rpm/package.c
--- ruby-rpm-1.2.0/ext/rpm/package.c	2005-10-17 00:51:48.536090365 +0900
+++ ruby-rpm-1.2.0.new/ext/rpm/package.c	2005-10-17 00:18:27.924786747 +0900
@@ -195,6 +195,7 @@
 	for (i=0;i<length;i++)
 		copy_tags[i] = NUM2INT(rb_ary_entry(tags, i));
 	headerCopyTags(RPM_HEADER(from),RPM_HEADER(to),copy_tags);
+	return Qnil;
 }
 
 VALUE
@@ -236,6 +237,7 @@
 	headerAddOrAppendEntry(RPM_HEADER(pkg),nametag,RPM_STRING_ARRAY_TYPE,&name,1);
 	headerAddOrAppendEntry(RPM_HEADER(pkg),versiontag,RPM_STRING_ARRAY_TYPE,&evr,1);
 	headerAddOrAppendEntry(RPM_HEADER(pkg),flagstag,RPM_INT32_TYPE,&flag,1);
+	return Qnil;
 }
 
 VALUE
@@ -253,6 +255,7 @@
 	}
 
 	headerAddOrAppendEntry(RPM_HEADER(pkg),NUM2INT(tag),RPM_INT32_TYPE,&v,1);
+	return Qnil;
 }
 
 VALUE
@@ -262,6 +265,7 @@
 		rb_raise(rb_eTypeError, "illegal argument type");
 	}
 	headerAddOrAppendEntry(RPM_HEADER(pkg),NUM2INT(tag),RPM_STRING_ARRAY_TYPE,&RSTRING(val)->ptr,1);
+	return Qnil;
 }
 
 VALUE
@@ -271,6 +275,7 @@
 		rb_raise(rb_eTypeError, "illegal argument type");
 	}
 	headerAddEntry(RPM_HEADER(pkg),NUM2INT(tag),RPM_STRING_TYPE,RSTRING(val)->ptr,1);
+	return Qnil;
 }
 
 VALUE
@@ -280,6 +285,7 @@
 		rb_raise(rb_eTypeError, "illegal argument type");
 	}
 	headerAddEntry(RPM_HEADER(pkg),NUM2INT(tag),RPM_BIN_TYPE,RSTRING(val)->ptr,RSTRING(val)->len);
+	return Qnil;
 }
 
 VALUE
@@ -302,7 +308,7 @@
 	rpmTagType type;
 	int_32 count;
 	register int i;
-	register const char* p;
+//	register const char* p;
 	int ary_p = 0;
 	int i18n_p = 0;
 
@@ -337,6 +343,148 @@
 	case RPMTAG_DESCRIPTION:
 		i18n_p = 1;
 		break;
+	case RPMTAG_HEADERIMAGE:
+	case RPMTAG_HEADERSIGNATURES:
+	case RPMTAG_HEADERIMMUTABLE:
+	case RPMTAG_HEADERREGIONS:
+	case RPMTAG_HEADERI18NTABLE:
+	case RPMTAG_SIG_BASE:
+	case RPMTAG_SIGSIZE:
+	case RPMTAG_SIGLEMD5_1:
+	case RPMTAG_SIGPGP:
+	case RPMTAG_SIGLEMD5_2:
+	case RPMTAG_SIGMD5:
+	case RPMTAG_SIGGPG:
+	case RPMTAG_SIGPGP5:
+	case RPMTAG_BADSHA1_1:
+	case RPMTAG_BADSHA1_2:
+	case RPMTAG_PUBKEYS:
+	case RPMTAG_DSAHEADER:
+	case RPMTAG_RSAHEADER:
+	case RPMTAG_SHA1HEADER:
+	case RPMTAG_NAME:
+	case RPMTAG_VERSION:
+	case RPMTAG_RELEASE:
+	case RPMTAG_EPOCH:
+	case RPMTAG_BUILDTIME:
+	case RPMTAG_BUILDHOST:
+	case RPMTAG_INSTALLTIME:
+	case RPMTAG_SIZE:
+	case RPMTAG_GIF:
+	case RPMTAG_XPM:
+	case RPMTAG_CHANGELOG:
+	case RPMTAG_SOURCE:
+	case RPMTAG_PATCH:
+	case RPMTAG_URL:
+	case RPMTAG_OS:
+	case RPMTAG_ARCH:
+	case RPMTAG_PREIN:
+	case RPMTAG_POSTIN:
+	case RPMTAG_PREUN:
+	case RPMTAG_POSTUN:
+	case RPMTAG_OLDFILENAMES:
+	case RPMTAG_FILEUIDS:
+	case RPMTAG_FILEGIDS:
+	case RPMTAG_FILELINKTOS:
+	case RPMTAG_ROOT:
+	case RPMTAG_EXCLUDE:
+	case RPMTAG_EXCLUSIVE:
+	case RPMTAG_ICON:
+	case RPMTAG_SOURCERPM:
+	case RPMTAG_FILEVERIFYFLAGS:
+	case RPMTAG_ARCHIVESIZE:
+	case RPMTAG_PROVIDENAME:
+	case RPMTAG_REQUIRENAME:
+	case RPMTAG_REQUIREVERSION:
+	case RPMTAG_NOSOURCE:
+	case RPMTAG_NOPATCH:
+	case RPMTAG_CONFLICTNAME:
+	case RPMTAG_CONFLICTVERSION:
+	case RPMTAG_DEFAULTPREFIX:
+	case RPMTAG_BUILDROOT:
+	case RPMTAG_INSTALLPREFIX:
+	case RPMTAG_EXCLUDEARCH:
+	case RPMTAG_EXCLUDEOS:
+	case RPMTAG_EXCLUSIVEARCH:
+	case RPMTAG_EXCLUSIVEOS:
+	case RPMTAG_AUTOREQPROV:
+	case RPMTAG_RPMVERSION:
+	case RPMTAG_TRIGGERSCRIPTS:
+	case RPMTAG_TRIGGERNAME:
+	case RPMTAG_TRIGGERVERSION:
+	case RPMTAG_TRIGGERFLAGS:
+	case RPMTAG_TRIGGERINDEX:
+	case RPMTAG_VERIFYSCRIPT:
+	case RPMTAG_CHANGELOGTIME:
+	case RPMTAG_CHANGELOGNAME:
+	case RPMTAG_CHANGELOGTEXT:
+	case RPMTAG_BROKENMD5:
+	case RPMTAG_PREREQ:
+	case RPMTAG_PREINPROG:
+	case RPMTAG_POSTINPROG:
+	case RPMTAG_PREUNPROG:
+	case RPMTAG_POSTUNPROG:
+	case RPMTAG_BUILDARCHS:
+	case RPMTAG_OBSOLETENAME:
+	case RPMTAG_VERIFYSCRIPTPROG:
+	case RPMTAG_TRIGGERSCRIPTPROG:
+	case RPMTAG_DOCDIR:
+	case RPMTAG_COOKIE:
+	case RPMTAG_FILEDEVICES:
+	case RPMTAG_FILEINODES:
+	case RPMTAG_FILELANGS:
+	case RPMTAG_PREFIXES:
+	case RPMTAG_INSTPREFIXES:
+	case RPMTAG_TRIGGERIN:
+	case RPMTAG_TRIGGERUN:
+	case RPMTAG_TRIGGERPOSTUN:
+	case RPMTAG_AUTOREQ:
+	case RPMTAG_AUTOPROV:
+	case RPMTAG_CAPABILITY:
+	case RPMTAG_SOURCEPACKAGE:
+	case RPMTAG_OLDORIGFILENAMES:
+	case RPMTAG_BUILDPREREQ:
+	case RPMTAG_BUILDREQUIRES:
+	case RPMTAG_BUILDCONFLICTS:
+	case RPMTAG_BUILDMACROS:
+	case RPMTAG_PROVIDEVERSION:
+	case RPMTAG_OBSOLETEVERSION:
+	case RPMTAG_BASENAMES:
+	case RPMTAG_DIRNAMES:
+	case RPMTAG_ORIGDIRINDEXES:
+	case RPMTAG_ORIGBASENAMES:
+	case RPMTAG_ORIGDIRNAMES:
+	case RPMTAG_OPTFLAGS:
+	case RPMTAG_DISTURL:
+	case RPMTAG_PAYLOADFORMAT:
+	case RPMTAG_PAYLOADCOMPRESSOR:
+	case RPMTAG_PAYLOADFLAGS:
+	case RPMTAG_INSTALLCOLOR:
+	case RPMTAG_INSTALLTID:
+	case RPMTAG_REMOVETID:
+	case RPMTAG_SHA1RHN:
+	case RPMTAG_RHNPLATFORM:
+	case RPMTAG_PLATFORM:
+	case RPMTAG_PATCHESNAME:
+	case RPMTAG_PATCHESFLAGS:
+	case RPMTAG_PATCHESVERSION:
+	case RPMTAG_CACHECTIME:
+	case RPMTAG_CACHEPKGPATH:
+	case RPMTAG_CACHEPKGSIZE:
+	case RPMTAG_CACHEPKGMTIME:
+	case RPMTAG_FILECOLORS:
+	case RPMTAG_FILECLASS:
+	case RPMTAG_CLASSDICT:
+	case RPMTAG_FILEDEPENDSX:
+	case RPMTAG_FILEDEPENDSN:
+	case RPMTAG_DEPENDSDICT:
+	case RPMTAG_SOURCEPKGID:
+	case RPMTAG_FILECONTEXTS:
+	case RPMTAG_FSCONTEXTS:
+	case RPMTAG_RECONTEXTS:
+	case RPMTAG_POLICIES:
+	case RPMTAG_FIRSTFREE_TAG:
+		break;
 	}
 
 	switch (type) {
diff -uNr ruby-rpm-1.2.0/ext/rpm/private.h ruby-rpm-1.2.0.new/ext/rpm/private.h
--- ruby-rpm-1.2.0/ext/rpm/private.h	2004-05-29 19:14:20.000000000 +0900
+++ ruby-rpm-1.2.0.new/ext/rpm/private.h	2005-10-17 00:18:21.908185258 +0900
@@ -7,6 +7,7 @@
 /* $Id$ */
 
 #define RPM_VERSION(maj,min,pl) (((maj) << 16) + ((min) << 8) + (pl))
+#define _GNU_SOURCE
 
 #include <ctype.h>
 #include <errno.h>
@@ -24,6 +25,8 @@
 #include <rpmdb.h>
 #include <rpmbuild.h>
 #include <rpmmessages.h>
+#include <rpmds.h>
+
 #if RPM_VERSION(4,1,0) <= RPM_VERSION_CODE
 #include <rpmts.h>
 #include <rpmps.h>
diff -uNr ruby-rpm-1.2.0/ext/rpm/ruby-rpm.h ruby-rpm-1.2.0.new/ext/rpm/ruby-rpm.h
--- ruby-rpm-1.2.0/ext/rpm/ruby-rpm.h	2004-05-29 19:14:20.000000000 +0900
+++ ruby-rpm-1.2.0.new/ext/rpm/ruby-rpm.h	2005-10-17 00:04:27.605461104 +0900
@@ -10,6 +10,7 @@
 #define ruby_rpm_h_Included 1
 
 #include <ruby.h>
+#include <st.h>
 
 #define RUBY_RPM_VERSION "1.1.10"
 
diff -uNr ruby-rpm-1.2.0/ext/rpm/version.c ruby-rpm-1.2.0.new/ext/rpm/version.c
--- ruby-rpm-1.2.0/ext/rpm/version.c	2005-10-17 00:51:48.532184115 +0900
+++ ruby-rpm-1.2.0.new/ext/rpm/version.c	2005-10-17 00:38:18.985319032 +0900
@@ -289,7 +289,7 @@
 	r = rb_ivar_get(ver, id_r);
 	e = rb_ivar_get(ver, id_e);
 	if (!NIL_P(e)) {
-		snprintf(buf,BUFSIZ,"%d:",NUM2INT(e));
+		snprintf(buf,BUFSIZ,"%d:",(int)NUM2INT(e));
 		p += strlen(buf);
         }
 	strcpy(p, RSTRING(v)->ptr);
@@ -304,16 +304,16 @@
 rpm_version_inspect(VALUE ver)
 {
 	char buf[BUFSIZ];
-	char *p = buf;
+//	char *p = buf;
 	VALUE v, r, e;
 	v = rb_ivar_get(ver, id_v);
 	r = rb_ivar_get(ver, id_r);
 	e = rb_ivar_get(ver, id_e);
 
 	if (!NIL_P(e)) {
-		snprintf(buf, BUFSIZ, "#<RPM::Version v=%s, r=%s, e=%d>", RSTRING(rb_inspect(v))->ptr, RSTRING(rb_inspect(r))->ptr, RSTRING(rb_inspect(e))->ptr);
+		snprintf(buf, BUFSIZ, "#<RPM::Version v=%s, r=%s, e=%lx>", RSTRING(rb_inspect(v))->ptr, RSTRING(rb_inspect(r))->ptr, (unsigned long)(RSTRING(rb_inspect(e))->ptr));
         } else {
-		snprintf(buf, BUFSIZ, "#<RPM::Version v=%s, r=%s>", RSTRING(rb_inspect(v))->ptr, RSTRING(rb_inspect(r))->ptr);
+		snprintf(buf, BUFSIZ, "#<RPM::Version v=%s, r=%lx>", RSTRING(rb_inspect(v))->ptr, (unsigned long)(RSTRING(rb_inspect(r))->ptr));
 	}
 
 	return rb_str_new2(buf);
